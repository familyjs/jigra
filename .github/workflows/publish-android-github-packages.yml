# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a package using Gradle and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#Publishing-using-gradle

name: Publish Native Android Library (GitHub Packages)

on:
  workflow_call:
    secrets:
      JIG_GH_AUTHOR:
        required: true
      JIG_GH_RELEASE_TOKEN:
        required: true
  workflow_dispatch:

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        ref: '5.x'
        token: ${{ secrets.JIG_GH_RELEASE_TOKEN }}

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Extract version from package.json
      id: extract_version
      run: echo "VERSION=$(node -p "require('./package.json').version")" >> $GITHUB_ENV && echo "Extracted version is ${{ env.VERSION }}"
      working-directory: ./android

    - name: Update build.gradle with extracted version
      run: |
        sed -i "s/JIG_LIB_VERSION/'${{ env.VERSION }}'/g" ./scripts/publish-module.gradle
      working-directory: ./android

    - name: Update info
      run: |
        sed -i "s/JIG_AUTHOR/'${{ secrets.JIG_GH_AUTHOR }}'/g" ./scripts/publish-module.gradle && \
        sed -i "s/JIG_RELEASE_TOKEN/'${{ secrets.JIG_GH_RELEASE_TOKEN }}'/g" ./scripts/publish-module.gradle
      working-directory: ./android

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'zulu'
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file

    - name: Grant execute permission for gradlew
      run: chmod +x ./android/gradlew

    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0

    - name: Clean & Build with Gradle
      run: ./gradlew clean build --max-workers 1 -b ./jigra/build.gradle -Pandroid.useAndroidX=true
      working-directory: ./android

    # The USERNAME and TOKEN need to correspond to the credentials environment variables used in
    # the publishing section of your build.gradle
    - name: Publish to GitHub Packages
      run: ./gradlew publish --max-workers 1 -b ./jigra/build.gradle
      working-directory: ./android
      env:
        USERNAME: ${{ github.actor }}
        TOKEN: ${{ secrets.JIG_GH_RELEASE_TOKEN }}
